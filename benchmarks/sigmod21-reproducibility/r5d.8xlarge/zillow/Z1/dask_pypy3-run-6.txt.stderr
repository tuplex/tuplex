RPython traceback:
  File "pypy_interpreter.c", line 42998, in BuiltinCode3_fastcall_3
  File "pypy_interpreter_2.c", line 55754, in GetSetProperty_descr_property_get
  File "implement_3.c", line 14942, in descr_typecheck_fget_f_back
  File "rpython_jit_metainterp.c", line 1534, in force_virtual
RPython traceback:
  File "rpython_jit_metainterp.c", line 21500, in handle_jitexception_7
  File "rpython_jit_metainterp_1.c", line 1639, in execute_assembler__star_2_2
  File "rpython_jit_metainterp.c", line 2424, in ResumeGuardForcedDescr_handle_fail
  File "rpython_jit_metainterp.c", line 4382, in resume_in_blackhole
  File "rpython_jit_metainterp.c", line 9005, in blackhole_from_resumedata
  File "rpython_jit_codewriter.c", line 123, in enumerate_vars__unique_id
  File "rpython_jit_metainterp.c", line 10854, in ResumeDataDirectReader_getvirtual_ptr
Fatal RPython error: AssertionError
/opt/pypy3/site-packages/dask/dataframe/core.py:3370: UserWarning: 
You did not provide metadata, so Dask is running your function on a small dataset to guess output types. It is possible that Dask will guess incorrectly.
To provide an explicit output types or to silence this message, please provide the `meta=` keyword, as described in the map or apply function that you are using.
  Before: .apply(func)
  After:  .apply(func, meta=('title', 'object'))

  warnings.warn(meta_warning(meta))
Exception in thread Profile:
Traceback (most recent call last):
  File "/opt/pypy3/lib-python/3/threading.py", line 916, in _bootstrap_inner
    self.run()
  File "/opt/pypy3/lib-python/3/threading.py", line 864, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/pypy3/site-packages/distributed/profile.py", line 268, in _watch
    process(frame, None, recent, omit=omit)
  File "/opt/pypy3/site-packages/distributed/profile.py", line 103, in process
    state = process(prev, frame, state, stop=stop)
  File "/opt/pypy3/site-packages/distributed/profile.py", line 103, in process
    state = process(prev, frame, state, stop=stop)
  File "/opt/pypy3/site-packages/distributed/profile.py", line 103, in process
    state = process(prev, frame, state, stop=stop)
  [Previous line repeated 2 more times]
  File "/opt/pypy3/site-packages/distributed/profile.py", line 99, in process
    prev = frame.f_back
SystemError: unexpected internal exception (please report a bug): <InvalidVirtualRef object at 0x7fc4e2222168>; internal traceback was dumped to stderr

distributed.nanny - WARNING - Restarting worker
distributed.worker - ERROR - Worker stream died during communication: tcp://127.0.0.1:38111
Traceback (most recent call last):
  File "/opt/pypy3/site-packages/tornado/iostream.py", line 867, in _read_to_buffer
    bytes_read = self.read_from_fd(buf)
  File "/opt/pypy3/site-packages/tornado/iostream.py", line 1140, in read_from_fd
    return self.socket.recv_into(buf, len(buf))
ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/pypy3/site-packages/distributed/comm/core.py", line 319, in connect
    handshake = await asyncio.wait_for(comm.read(), time_left())
  File "/opt/pypy3/lib-python/3/asyncio/tasks.py", line 358, in wait_for
    return fut.result()
  File "/opt/pypy3/lib-python/3/asyncio/futures.py", line 243, in result
    raise self._exception
  File "/opt/pypy3/lib-python/3/asyncio/tasks.py", line 180, in _step
    result = coro.send(None)
  File "/opt/pypy3/site-packages/distributed/comm/tcp.py", line 205, in read
    convert_stream_closed_error(self, e)
  File "/opt/pypy3/site-packages/distributed/comm/tcp.py", line 126, in convert_stream_closed_error
    ) from exc
distributed.comm.core.CommClosedError: in <closed TCP>: ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/pypy3/site-packages/distributed/worker.py", line 2064, in gather_dep
    self.rpc, deps, worker, who=self.address
  File "/opt/pypy3/site-packages/distributed/worker.py", line 3333, in get_data_from_worker
    return await retry_operation(_get_data, operation="get_data_from_worker")
  File "/opt/pypy3/site-packages/distributed/utils_comm.py", line 389, in retry_operation
    operation=operation,
  File "/opt/pypy3/site-packages/distributed/utils_comm.py", line 369, in retry
    return await coro()
  File "/opt/pypy3/site-packages/distributed/worker.py", line 3310, in _get_data
    comm = await rpc.connect(worker)
  File "/opt/pypy3/site-packages/distributed/core.py", line 1013, in connect
    **self.connection_args,
  File "/opt/pypy3/site-packages/distributed/comm/core.py", line 326, in connect
    ) from exc
OSError: Timed out during handshake while connecting to tcp://127.0.0.1:38111 after 10 s
distributed.worker - ERROR - Worker stream died during communication: tcp://127.0.0.1:38111
ConnectionRefusedError: [Errno 111] Connection refused

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/pypy3/site-packages/distributed/comm/core.py", line 288, in connect
    timeout=min(intermediate_cap, time_left()),
  File "/opt/pypy3/lib-python/3/asyncio/tasks.py", line 358, in wait_for
    return fut.result()
  File "/opt/pypy3/lib-python/3/asyncio/futures.py", line 243, in result
    raise self._exception
  File "/opt/pypy3/lib-python/3/asyncio/tasks.py", line 182, in _step
    result = coro.throw(exc)
  File "/opt/pypy3/site-packages/distributed/comm/tcp.py", line 388, in connect
    convert_stream_closed_error(self, e)
  File "/opt/pypy3/site-packages/distributed/comm/tcp.py", line 126, in convert_stream_closed_error
    ) from exc
distributed.comm.core.CommClosedError: in <distributed.comm.tcp.TCPConnector object at 0x00007fc450c2cf00>: ConnectionRefusedError: [Errno 111] Connection refused

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/opt/pypy3/site-packages/distributed/worker.py", line 2064, in gather_dep
    self.rpc, deps, worker, who=self.address
  File "/opt/pypy3/site-packages/distributed/worker.py", line 3333, in get_data_from_worker
    return await retry_operation(_get_data, operation="get_data_from_worker")
  File "/opt/pypy3/site-packages/distributed/utils_comm.py", line 389, in retry_operation
    operation=operation,
  File "/opt/pypy3/site-packages/distributed/utils_comm.py", line 369, in retry
    return await coro()
  File "/opt/pypy3/site-packages/distributed/worker.py", line 3310, in _get_data
    comm = await rpc.connect(worker)
  File "/opt/pypy3/site-packages/distributed/core.py", line 1013, in connect
    **self.connection_args,
  File "/opt/pypy3/site-packages/distributed/comm/core.py", line 310, in connect
    ) from active_exception
OSError: Timed out trying to connect to tcp://127.0.0.1:38111 after 10 s
